import {Project} from "../model/Core"

import {ProjectEditor} from "../operations/ProjectEditor"


export class Result {

    constructor(public result: boolean, public message: string) {}

    static Success: Result = new Result(true, "OK")

    static Failure(why: string): Result {
        return new Result(false, why)
    }
}



export interface Definitions {

    Given(s: string, f: (Project) => void): void

    When(s: string, f: (Project) => void): void

    Then(s: string, f: (Project) => Result): void
    
}

// TODO with an editor


/**
 * This is provided by Nashorn
 */
export declare var _definitions: Definitions

// TODO not sure why these aren't working

export var Given = _definitions.Given

export var When = _definitions.When

export var Then = _definitions.Then

