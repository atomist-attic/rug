
import {TreeNode,TextTreeNode,ParentAwareTreeNode,PathExpression,Match,PathExpressionEngine} from "../../tree/PathExpression"
import {DecoratingPathExpressionEngine} from "../../tree/DecoratingPathExpressionEngine"
import {AstHelper} from "../AstHelper"

import {File} from "../../model/Core"

import * as scala from "./Types"

// TODO only in separate module due to inability to reference module for create [""]
export class ScalaPathExpressionEngine extends DecoratingPathExpressionEngine {

    protected decoratorFor(n: TreeNode): any {
        let className = this.decoratorClassName(n)
        let ops = new scala[className](n, this.delegate)
        return ops
    }
}