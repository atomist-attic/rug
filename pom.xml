<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.atomist</groupId>
    <artifactId>rug</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>rug</name>
    <description>Rug Runtime</description>
    <properties>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <timestamp>${maven.build.timestamp}</timestamp>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <scala.version>2.11.8</scala.version>
        <scala.binary.version>2.11</scala.binary.version>
        <scoverage.plugin.version>1.3.0</scoverage.plugin.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.atomist</groupId>
                <artifactId>atomist-bom</artifactId>
                <version>1.0.0-m.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>4.3.7.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>com.atomist</groupId>
            <artifactId>artifact-source</artifactId>
            <version>1.0.0-m.1</version>
        </dependency>
        <!-- For now the TS compiler needs to stay as runtime dependency to make sure it gets brought into the CLI
             when running rug install etc. This has to become part of the language <-> runtime version mapping -->
        <dependency>
            <groupId>com.atomist</groupId>
            <artifactId>rug-typescript-compiler</artifactId>
            <version>1.0.0-m.1</version>
        </dependency>
        <dependency>
            <groupId>com.coveo</groupId>
            <artifactId>nashorn-commonjs-modules</artifactId>
            <version>1.0.7</version>
        </dependency>
        <dependency>
            <groupId>com.atlassian.sourcemap</groupId>
            <artifactId>sourcemap</artifactId>
            <version>1.7.6</version>
        </dependency>
        <dependency>
            <groupId>com.github.julianthome</groupId>
            <artifactId>inmemantlr-api</artifactId>
            <version>1.3.2</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.javaparser</groupId>
            <artifactId>javaparser-core</artifactId>
            <version>2.5.1</version>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>gherkin</artifactId>
            <version>4.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.scalameta</groupId>
            <artifactId>scalameta_${scala.binary.version}</artifactId>
            <version>1.4.0</version>
        </dependency>
        <dependency>
            <groupId>com.github.spullara.mustache.java</groupId>
            <artifactId>compiler</artifactId>
            <version>0.9.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.7</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.scala-lang.modules</groupId>
            <artifactId>scala-parser-combinators_${scala.binary.version}</artifactId>
            <version>1.0.4</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.scala-logging</groupId>
            <artifactId>scala-logging_${scala.binary.version}</artifactId>
            <version>3.5.0</version>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.binary.version}</artifactId>
            <version>3.0.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_${scala.binary.version}</artifactId>
        </dependency>
        <!-- For regex generation -->
        <dependency>
            <groupId>com.github.mifmif</groupId>
            <artifactId>generex</artifactId>
            <version>1.0.2</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <execution>
                        <id>enforce-banned-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>commons-logging:commons-logging</exclude>
                                    </excludes>
                                </bannedDependencies>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>add-test-resource</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/main/typescript</directory>
                                    <targetPath>src/main/typescript</targetPath>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.2</version>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <scalaCompatVersion>${scala.binary.version}</scalaCompatVersion>
                    <args>
                        <!-- work-around for https://issues.scala-lang.org/browse/SI-8358 -->
                        <arg>-nobootcp</arg>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                        <arg>-language:existentials</arg>
                        <arg>-language:implicitConversions</arg>
                        <arg>-Xfatal-warnings</arg>
                    </args>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
                <version>${scoverage.plugin.version}</version>
                <configuration>
                    <highlighting>true</highlighting>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                    <logForkedProcessCommand>true</logForkedProcessCommand>
                    <!-- T: Failed test reminders with short stack traces -->
                    <stdout>T</stdout>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>public-atomist-release</id>
            <name>Atomist Release</name>
            <url>https://atomist.jfrog.io/atomist/libs-release</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>atlassian</id>
            <name>Atlassian</name>
            <url>https://maven.atlassian.com/content/repositories/atlassian-public/</url>
        </repository>
    </repositories>
    <distributionManagement>
        <repository>
            <id>public-atomist-release</id>
            <name>Atomist Release</name>
            <url>https://atomist.jfrog.io/atomist/libs-release-local</url>
        </repository>
    </distributionManagement>
    <profiles>
        <profile>
            <id>signedRelease</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>npm-release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.alchim31.maven</groupId>
                        <artifactId>scala-maven-plugin</artifactId>
                        <version>3.2.2</version>
                        <executions>
                            <execution>
                                <id>scala-compile-first</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>scala-test-compile</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <scalaCompatVersion>${scala.binary.version}</scalaCompatVersion>
                            <args>
                                <!-- work-around for https://issues.scala-lang.org/browse/SI-8358 -->
                                <arg>-nobootcp</arg>
                                <arg>-deprecation</arg>
                                <arg>-feature</arg>
                                <arg>-language:existentials</arg>
                                <arg>-language:implicitConversions</arg>
                            </args>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>1.3</version>
                        <executions>
                            <execution>
                                <id>install node and npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <configuration>
                                    <nodeVersion>v7.2.1</nodeVersion>
                                </configuration>
                                <phase>generate-sources</phase>
                            </execution>
                            <execution>
                                <id>install typescript and typedoc</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <!-- Pin versions to things we know are working. TS things tend to break! -->
                                    <arguments>install --save-dev typescript@2.2.2 @types/node@7.0.13 typedoc@0.5.10 gulp@3.9.1 gulp-typedoc@2.0.2  @types/lodash@4.14.62</arguments>
                                </configuration>
                                <phase>process-test-resources</phase>
                            </execution>
                            <execution>
                                <id>gulp typedoc rug</id>
                                <goals>
                                    <goal>gulp</goal>
                                </goals>
                                <configuration>
                                    <arguments>typedoc --gulpfile .atomist/node_modules/@atomist/rug/gulpfile.js</arguments>
                                </configuration>
                                <phase>process-test-resources</phase>
                            </execution>
                            <execution>
                                <id>gulp typedoc cortex</id>
                                <goals>
                                    <goal>gulp</goal>
                                </goals>
                                <configuration>
                                    <arguments>typedoc --gulpfile .atomist/node_modules/@atomist/cortex/gulpfile.js</arguments>
                                </configuration>
                                <phase>process-test-resources</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <installDirectory>${project.build.directory}</installDirectory>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <id>compile-typescript</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>process-test-resources</phase>
                                <configuration>
                                    <target>
                                        <exec executable="${project.build.directory}/node_modules/typescript/bin/tsc" failonerror="true">
                                            <arg value="-p"/>
                                            <arg value="${project.build.directory}/.atomist/node_modules/@atomist/rug"/>
                                        </exec>
                                        <exec executable="${project.build.directory}/node_modules/typescript/bin/tsc" failonerror="true">
                                            <arg value="-p"/>
                                            <arg value="${project.build.directory}/.atomist/node_modules/@atomist/cortex"/>
                                        </exec>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>mk-ts-output-dir</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/.atomist"/>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-ts</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <target>
                                        <copy todir="${project.build.directory}/.atomist">
                                            <fileset dir="src/main/typescript"/>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>mkdir-rug-model</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/.atomist/node_modules/@atomist/rug/model"/>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>mkdir-cortex</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/.atomist/node_modules/@atomist/cortex"/>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>mkdir-cortex-stub</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/.atomist/node_modules/@atomist/cortex/stub"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.5.0</version>
                        <executions>
                            <execution>
                                <id>generate-interfaces</id>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <mainClass>com.atomist.rug.ts.TypeScriptInterfaceGenerator</mainClass>
                                    <arguments>
                                        <argument>${project.build.directory}/.atomist/node_modules/@atomist</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>generate-extended-model</id>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <mainClass>com.atomist.rug.ts.CortexTypeGeneratorApp</mainClass>
                                    <arguments>
                                        <argument>${project.build.directory}/.atomist/node_modules/@atomist</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>3.3</version>
                        <configuration>
                            <reportPlugins>
                                <plugin>
                                    <artifactId>maven-project-info-reports-plugin</artifactId>
                                    <version>2.7</version>
                                </plugin>
                                <plugin>
                                    <groupId>net.alchim31.maven</groupId>
                                    <artifactId>scala-maven-plugin</artifactId>
                                    <version>3.2.2</version>
                                    <configuration>
                                        <jvmArgs>
                                            <jvmArg>-Xms64m</jvmArg>
                                            <jvmArg>-Xmx1024m</jvmArg>
                                        </jvmArgs>
                                    </configuration>
                                </plugin>
                            </reportPlugins>
                        </configuration>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
    </profiles>
</project>
